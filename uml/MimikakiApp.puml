@startuml MimikakiClassDiagram
' Models
class MimiModel
{
    - height : int
    - width : int
    - topRegion : MimiRegion
    - centerRegion : MimiRegion
    - bottomRegion : MimiRegion
}

class MimiRegion
{
    - region : PathInternalRegion
    - hairList : List<MimiHair>
    - dirtList : List<MimiDirt>
    + OnTouch : Action
    + OnDirtRemoving : Action
    + OnDirtRemoved : Action
}

class MimiHair
{
    - origin : Point
    - movement : Point
    - springConst : double
    + MimiHair(position : Point)
    + GetPosition() : Point
    + UpdatePosition(force : Point) : void
}

class MimiDirt
{
    - position : Point
    - hardness : double
    + MimiDirt(position : Point, hardness : double)
}

class PathInternalRegion
{
    - dict : Dictionary<string, bool[,]>
    + this[string] : bool[,]
    + IsInner : bool[,]
    + IsBoundary : bool[,]
    + LenX : int
    + LenY : int
    + Dx : int
    + Dy : int
    + Xs : int
    + Ys : int
    + Xe : int
    + Ye : int
    + PathInternalRegion(pathF : PathF, dx : int, dy : int)
    - FillBoundaryPoints(pathF : PathF) : void
    - FillInternalRegion() : void
    - ConvertToRegionIndex(x : double, y : double) : (int, int)
    + ContainsInRegion(point : Point) : bool
    + ContainsInRegion(x: double, y : double) : bool
}

' Views
class TrackableMimiView
{
    - targetView : ViewModels
    - targetHeightRequest : double
    - displayRatio : double
    + TrackableView()
    + SetTargetView(targetView : View, targetHeightRequest : double) : Task
    - InitializeTrackableView() : Task
    + RegistDetectableRegionView(detectableView : DetectableRegionView) : void
}

class MimiRegionView
{
    - regionDots : Shape[,]
    + DetectableRegionView(...)
    + ShowFlaggedRegion(region : PathInternalRegion, flags : bool[,], color : Color) : void
}

' ViewModels
class TrackableMimiViewModel
{
    - tracker : PositionTracker
    - trackableMimi : TrackableView
    + OnMoveOnMimi : Action
    + BindTrackableMimi(trackableMimi: TrackableView) : void
    - RunTrackerProcess()
}

class MimiRegionViewModel
{

}

' Drawable
class MimiRegionDrawable
{

}

' Page
class MainPage
{
    + InitializeTrackableMimi()
}

' Library
package TakeMauiEasy
{
    class PositionTracker
}

' 
MimiModel o-- "3" MimiRegion
MimiRegion --> PathInternalRegion
MimiRegion *-- MimiHair
MimiRegion *-- MimiDirt
TrackableMimiView *-- MimiRegionView
TrackableMimiViewModel -right-> TrackableMimiView
TrackableMimiViewModel -left-> MimiModel
MainPage --> TrackableMimiViewModel

TrackableMimiViewModel --> PositionTracker

TrackableMimiViewModel o-- "3" MimiRegionViewModel
MimiRegionViewModel --> MimiRegionView
MimiRegionView --> MimiRegionDrawable
MimiRegionDrawable --|> IDrawable

@enduml