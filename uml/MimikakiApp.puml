@startuml MimikakiClassDiagram
' Models
' class MimiModel
' {
'     - height : int
'     - width : int
'     - topRegion : MimiRegion
'     - centerRegion : MimiRegion
'     - bottomRegion : MimiRegion
' }

class MimiRegion
{
    + Bounds : Rect
    + Hairs : IEnumerable<MimiHair>
    + Dirts : IEnumerable<MimiDirt>
    - internalRegion : InternalRegion
    - hairList : List<MimiHair>
    - dirtList : List<MimiDirt>
    + MimiRegion(internalRegion : InternalRegion)
    - InitializeMimiHair(density : double)
    + OnTouch : Action
    + OnDirtRemoving : Action
    + OnDirtRemoved : Action
}

class MimiHair
{
    - origin : Point
    - movement : Point
    - springConst : double
    + MimiHair(position : Point)
    + GetPosition() : Point
    + UpdatePosition(force : Point) : void
}

class MimiDirt
{
    - position : Point
    - hardness : double
    + MimiDirt(position : Point, hardness : double)
}

class InternalRegion
{
    '- dict : Dictionary<string, bool[,]>
    '+ this[string] : bool[,]
    - isInner : bool[,]
    - isBoundary : bool[,]
    + MaxWidth : float
    + MaxHeight : float
    + TopLeft : Point
    + Center : Point
    + LenX : int
    + LenY : int
    + Dx : int
    + Dy : int
    + Xs : int
    + Ys : int
    + Xe : int
    + Ye : int
    + InternalRegion(pathF : PathF, dx : int, dy : int)
    - FillBoundaryPoints(pathF : PathF) : void
    - FillInternalRegion() : void
    - ConvertToRegionIndex(x : double, y : double) : (int, int)
    + ContainsInRegion(point : Point) : bool
    + ContainsInRegion(x: double, y : double) : bool
}

' Views
class TrackableMimiView
{
    ' - targetView : ViewModels
    + TargetImageSource : ImageSource
    + TargetImageOriginalHeight : double
    ' - displayRatio : double
    + TrackableView()
    ' + SetTargetView(targetView : View, targetHeightRequest : double) : Task
    ' - InitializeTrackableView() : Task
    ' + RegistDetectableRegionView(detectableView : DetectableRegionView) : void
}

' class MimiRegionView
' {
'     - regionDots : Shape[,]
'     + DetectableRegionView(...)
'     + ShowFlaggedRegion(region : PathInternalRegion, flags : bool[,], color : Color) : void
' }

' ViewModels
class TrackableMimiViewModel
{
    - tracker : PositionTracker
    '- trackableMimiView : TrackableMimiView
    '- mimi : MimiModel
    + TopRegionDrawable : MimiRegionDrawable <<observable>>
    + CenterRegionDrawable : MimiRegionDrawable <<observable>>
    + BottomRegionDrawable : MimiRegionDrawable <<observable>>
    - topRegion : MimiRegion
    - centerRegion : MimiRegion
    - bottomRegion : MimiRegion
    - tracker : PositionTracker
    + OnMoveOnMimi : Action
    '+ BindTrackableMimi(trackableMimiView : TrackableMimiView) : void
    '- RunTrackerProcess()
    ~ TrackableMimiViewModel(tracker : PositionTracker, mimiTop : Geometry, mimiCenter : Geometry, mimiBottom : Geometry)
    ~ InvokeTrackerProcess(updateInterval : int) : void
    - RunTrackerProcess(updateInterval : int) : void
}

' class MimiRegionViewModel
' {
'     - regionView : MimiRegionView
'     - region : MimiRegion
'     + MimiRegionViewModel(geometry : Geometry)
' }

' Drawable
class MimiRegionDrawable
{
    + WidthRequest : double
    + HeightRequest : double
    + OffsetX : double
    + OffsetY : double
    - mimiRegion : MimiRegion
    '- internal : InternalRegion
    - padding : float
    - offsetX : double
    - offsetY : double
    + MimiRegionDrawable(mimiRegion : MimiRegion, padding : double)
    + Draw(canvas : ICanvas, dirtyRect : RectF) : void
    - VisualizeHair(canvas : ICanvas, color : Color, thinness : float) : void
}

' Message
class DrawMessage
{

}

' Page
class MainPage
{
    + MainPage()
    - InstantiateMimiViewModel(tracker : PositionTracker) : TrackableMimiViewModel
    - GetGeometryFromString(pathString : string) : Geometry
}

' Library
package TakeMauiEasy
{
    class PositionTracker
}

' 
'MimiModel o-- "3" MimiRegion
MimiRegion --> InternalRegion
MimiRegion *-- MimiHair
MimiRegion *-- MimiDirt
'
TrackableMimiViewModel --> PositionTracker
'TrackableMimiViewModel --> MimiModel
TrackableMimiViewModel o-- "3" MimiRegionDrawable

MainPage --> TrackableMimiViewModel
MainPage ..> PositionTracker
MainPage --> TrackableMimiView

MimiRegionDrawable --|> IDrawable
MimiRegionDrawable --> MimiRegion

@enduml