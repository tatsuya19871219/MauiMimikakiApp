<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MauiMimikakiApp.MainPage"
             xmlns:custom="clr-namespace:MauiMimikakiApp.CustomViews"
             xmlns:models="clr-namespace:MauiMimikakiApp.Models"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             BackgroundColor="LightPink">

    <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="EarDirection">
                    <VisualState Name="Right">
                        <VisualState.StateTriggers>
                            <StateTrigger IsActive="{Binding IsToggled, Source={x:Reference DirectionSwitch}}" IsActiveChanged="StateTrigger_IsActiveChanged"/>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter TargetName="MimiGrid" Property="RotationY" Value="180"/>
                            <!--<Setter TargetName="DirectionSwitch" Property="BackgroundColor" Value="Red"/>-->
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState Name="Left">
                        <VisualState.StateTriggers>
                            <StateTrigger IsActive="{Binding IsToggled, Source={x:Reference DirectionSwitch}, Converter={StaticResource InvertedBoolConverter}}" IsActiveChanged="StateTrigger_IsActiveChanged"/>                          
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter TargetName="MimiGrid" Property="RotationY" Value="0"/>
                            <!--<Setter TargetName="DirectionSwitch" Property="BackgroundColor" Value="Blue"/>-->
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
    
    <ContentPage.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources\Raw\TestResourceDictionary.xaml"/>
                <ResourceDictionary>
                    <toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ContentPage.Resources>

    <FlexLayout Direction="Column" JustifyContent="SpaceBetween">

        <FlexLayout.Resources>
            <Style TargetType="Label">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="HorizontalOptions" Value="Center"/>
            </Style>
        </FlexLayout.Resources>

        <Label x:Name="HeaderLabel" 
               Text="Mimikaki"/>

        <Switch x:Name="DirectionSwitch" IsToggled="False">

            

            <Switch.Triggers>
                <Trigger TargetType="Switch" Property="IsToggled" Value="True">
                    <!--<Setter TargetName="MimiGrid" Property="RotationY" Value="0"/>-->
                    <Setter Property="BackgroundColor" Value="Red"/>
                </Trigger>
                <Trigger TargetType="Switch" Property="IsToggled" Value="False">
                    <!--<Setter TargetName="MimiGrid" Property="RotationY" Value="180"/>-->
                    <Setter Property="BackgroundColor" Value="Blue"/>
                </Trigger>
            </Switch.Triggers>

        </Switch>

        <Grid x:Name="MimiGrid" HeightRequest="550"
              BackgroundColor="LightYellow"
              VerticalOptions="Center"
              Scale="1">

            <custom:MimikakiView x:Name="MimiView" 
                                Filename="{StaticResource Filename}">
                <x:Arguments>
                    <models:MimiViewBox Bounds="{StaticResource ViewBoxRect}"/>
                    <Path Data="{StaticResource MimiOuterPathString}"/>
                    <Path Data="{StaticResource MimiInnerPathString}"/>
                    <Path Data="{StaticResource MimiHolePathString}"/>
                </x:Arguments>
            </custom:MimikakiView>

        </Grid>
        
        <Label x:Name="FooterLabel" 
               Text="Mimikaki"/>

    </FlexLayout>

</ContentPage>
